{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robac\\\\To_Do_Project\\\\client\\\\src\\\\components\\\\InputTodo.js\";\nimport React, { Fragment, useState } from 'react';\n\nrequire('dotenv').config({\n  path: '../../../.env'\n});\n\nconst InputTodo = () => {\n  const [description, setDescription] = useState('');\n\n  const onSubmitForm = async e => {\n    //need prevent default bc we dont want page to refresh\n    e.preventDefault();\n\n    try {\n      const body = {\n        description\n      };\n      const response = await fetch(`http://${process.env.host}:${process.env.port}/todos`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = '/';\n      console.log('Res', response);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"Your To-Do List\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"d-flex mt-5\",\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Add\")));\n};\n\nexport default InputTodo;","map":{"version":3,"sources":["C:/Users/robac/To_Do_Project/client/src/components/InputTodo.js"],"names":["React","Fragment","useState","require","config","path","InputTodo","description","setDescription","onSubmitForm","e","preventDefault","body","response","fetch","process","env","host","port","method","headers","JSON","stringify","window","location","console","log","err","error","message","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC;AACAA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,IAAI,GAAG;AAAEL,QAAAA;AAAF,OAAb;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASC,OAAO,CAACC,GAAR,CAAYC,IAAK,IAAGF,OAAO,CAACC,GAAR,CAAYE,IAAK,QAAhD,EAAyD;AACnFC,QAAAA,MAAM,EAAE,MAD2E;AAEnFC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF0E;AAGnFR,QAAAA,IAAI,EAAES,IAAI,CAACC,SAAL,CAAeV,IAAf;AAH6E,OAAzD,CAA5B;AAKAW,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBb,QAAnB;AACD,KATD,CASE,OAAOc,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;AACF,GAfD;;AAgBA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEpB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,KAAK,EAAEF,WAAnD;AAAgE,IAAA,QAAQ,EAAEG,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACoB,MAAF,CAASC,KAAV,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAFA,CADF;AASD,CA5BD;;AA8BA,eAAezB,SAAf","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nrequire('dotenv').config({ path: '../../../.env' });\r\n\r\nconst InputTodo = () => {\r\n  const [description, setDescription] = useState('');\r\n\r\n  const onSubmitForm = async (e) => {\r\n    //need prevent default bc we dont want page to refresh\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(`http://${process.env.host}:${process.env.port}/todos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n      window.location = '/';\r\n      console.log('Res', response);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n    <h1 className='text-center mt-5'>Your To-Do List</h1>\r\n    <form className='d-flex mt-5' onSubmit={onSubmitForm}>\r\n      <input type='text' className='form-control' value={description} onChange={e => setDescription(e.target.value)}/>\r\n      <button className='btn btn-success'>Add</button>\r\n    </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputTodo;"]},"metadata":{},"sourceType":"module"}